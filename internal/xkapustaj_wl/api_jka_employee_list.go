/*
 * Waiting List Api
 *
 * Hospital Employee List management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: kapusta.jergus@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package xkapustaj_wl

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type JkaEmployeeListAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // AddNewEmployee - Add  new employee
   AddNewEmployee(ctx *gin.Context)

    // GetEmployeeListEntries - Provides the ambulance waiting list
   GetEmployeeListEntries(ctx *gin.Context)

 }

// partial implementation of JkaEmployeeListAPI - all functions must be implemented in add on files
type implJkaEmployeeListAPI struct {

}

func newJkaEmployeeListAPI() JkaEmployeeListAPI {
  return &implJkaEmployeeListAPI{}
}

func (this *implJkaEmployeeListAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/employee-list/:ambulanceId/entries", this.AddNewEmployee)
  routerGroup.Handle( http.MethodGet, "/employee-list/:ambulanceId/entries", this.GetEmployeeListEntries)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // AddNewEmployee - Add  new employee
// func (this *implJkaEmployeeListAPI) AddNewEmployee(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetEmployeeListEntries - Provides the ambulance waiting list
// func (this *implJkaEmployeeListAPI) GetEmployeeListEntries(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

